name: armv7lhf-cross-toolchain/armv7lhf-cross-eglibc.morph
kind: chunk
repo: upstream:eglibc2
ref: 43ee5d250ad47d2bee8ec17954efb7f22d2b804c
configure-commands:
- mkdir o
- cd libc && ln -s ../ports ports
- |
  export MORPH_ARCH=armv7lhf
  export TARGET=armv7lhf-baserock-linux-gnueabi
  export TARGET_STAGE1=armv7lhf-none-linux-gnueabi
  export CFLAGS="-O2 $CFLAGS"
  # eglibc looks for $TARGET-gcc, but not $TARGET_STAGE1-gcc even
  # though --build is specified, so we have to override what gcc to
  # use here.
  export CC="$TARGET_STAGE1-gcc"
  cd o && ../libc/configure \
    $(../morph-arch-config) \
    --build=$TARGET_STAGE1 --host=$TARGET \
    --prefix="$PREFIX" \
    `# [1]` --with-headers="$PREFIX/$TARGET/sys-root/$PREFIX/include" \
    `# [2]` --with-binutils="$PREFIX/$TARGET/bin" \
    `# [3]` --disable-profile  --enable-kernel=2.6.25 \
            --enable-add-ons=nptl,ports --without-cvs --without-selinux \
    `# [4]` libc_cv_c_cleanup=yes libc_cv_ctors_header=yes \
            libc_cv_forced_unwind=yes libc_cv_ssp=no
build-commands:
- cd o && make localtime=UTC
install-commands:
- |
  # eglibc doesn't help with sysroots, so we need to spell out the
  # full path ourselves.
  export TARGET=armv7lhf-baserock-linux-gnueabi
  cd o && make install_root="$DESTDIR/$PREFIX/$TARGET/sys-root/" \
               localtime=UTC install
build_depends:
- armv7lhf-cross-toolchain/armv7lhf-cross-binutils.morph
- armv7lhf-cross-toolchain/armv7lhf-cross-gcc-nolibc.morph
- armv7lhf-cross-toolchain/armv7lhf-cross-linux-api-headers.morph
